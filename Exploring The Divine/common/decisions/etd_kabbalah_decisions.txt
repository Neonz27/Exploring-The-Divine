# Decision To Trigger The Study Kabbalah Event
etd_study_kabbalah_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	
	title = etd_study_kabbalah_decision_title
	selection_tooltip = etd_study_kabbalah_decision_tooltip
	desc = etd_study_kabbalah_decision_desc
	confirm_text = etd_study_kabbalah_decision_confirm 

	is_shown = {
		age >= study_kabbalah_age_requirement
		is_imprisoned = no
		
		OR = {
			religion = religion:judaism_religion
			religion = religion:christianity_religion
		}
		
		NOT = {
			has_trait = kabbalist
		}
	}

	is_valid = {
		learning >= study_kabbalah_learning_requirement
	}

	cost = {
		piety = study_kabbalah_piety_requirement
	}
	
	cooldown = {
		years = study_kabbalah_cooldown_in_years
	}

	effect = {
		trigger_event = etd_kabbalah_events.1
	}
	
	ai_check_interval = study_kabbalah_ai_check_interval

	ai_potential = {
		# monthly_character_piety > study_kabbalah_ai_monthly_piety_requirement
		always = no # Added this to make the game happy in the mean time.
	}

	ai_will_do = {
		base = study_kabbalah_ai_will_do
	}
}

# Decision To Trigger The Practice Kabbalah Event
etd_practice_kabbalah_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	
	title = etd_practice_kabbalah_decision_title
	selection_tooltip = etd_practice_kabbalah_decision_tooltip
	desc = etd_practice_kabbalah_decision_desc
	confirm_text = etd_practice_kabbalah_decision_confirm
	
	is_shown = {
		age >= practice_kabbalah_age_requirement
		is_imprisoned = no
		
		OR = {
			religion = religion:judaism_religion
			religion = religion:christianity_religion
		}
		
		has_trait = kabbalist
	}
	
	is_valid = {
		custom_description = {
			text = "etd_has_not_recently_practiced_kabbalah"
			
			NOT = {
				has_character_modifier = practiced_kabbalah_modifier
			}
		}
	}
	
	cost = {
		piety = practice_kabbalah_piety_requirement
	}
	
	cooldown = {
		years = practice_kabbalah_cooldown_in_years
	}
	
	effect = {
		trigger_event = etd_kabbalah_events.2
	}
	
	ai_check_interval = practice_kabbalah_ai_check_interval
	
	ai_potential = {
		always = practice_kabbalah_ai_potential
	}

	ai_will_do = {
		base = practice_kabbalah_ai_will_do
	}
}